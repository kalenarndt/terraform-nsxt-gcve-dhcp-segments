resource "nsxt_policy_dhcp_server" "dhcp_server" {
  count             = var.create_dhcp_server ? 1 : 0
  display_name      = var.dhcp_server_name
  description       = var.dhcp_server_description
  lease_time        = var.dhcp_server_lease
  edge_cluster_path = data.nsxt_policy_edge_cluster.ec.path
}

resource "nsxt_policy_segment" "segment" {
  for_each          = var.segments
  display_name      = each.value.name
  description       = each.value.description
  connectivity_path = data.nsxt_policy_tier1_gateway.tier1_router.path
  dynamic "tag" {
    for_each = var.segments[each.key].tags != null ? var.segments[each.key].tags : {}
    content {
      tag   = tag.value.tag
      scope = tag.value.scope
    }
  }
  transport_zone_path = data.nsxt_policy_transport_zone.overlay_transport_zone.path
  dhcp_config_path    = var.create_dhcp_server ? nsxt_policy_dhcp_server.dhcp_server[0].path : data.nsxt_policy_dhcp_server.dhcp_server[0].path
  subnet {
    cidr        = each.value.cidr
    dhcp_ranges = [each.value.dhcp_range]
    dhcp_v4_config {
      server_address = each.value.dhcp_server_address
      dns_servers    = each.value.dns_servers
      lease_time     = each.value.lease_time
    }
  }
  discovery_profile {
    mac_discovery_profile_path = data.nsxt_policy_mac_discovery_profile.mac.path
  }

  lifecycle {
    ignore_changes = [
      revision
    ]
  }
}

// Data lookup to determine the path of the tier1 router
data "nsxt_policy_tier1_gateway" "tier1_router" {
  display_name = var.tier1
}

// Data lookup to determine the policy path of the overaly transport zone
data "nsxt_policy_transport_zone" "overlay_transport_zone" {
  display_name = var.overlay_tz
}

// Data lookup to determine the edge cluster that will be used for the DHCP server
data "nsxt_policy_edge_cluster" "ec" {
  display_name = var.edge_cluster_name
}

data "nsxt_policy_dhcp_server" "dhcp_server" {
  count        = var.create_dhcp_server ? 0 : 1
  display_name = var.dhcp_server_name
}

data "nsxt_policy_mac_discovery_profile" "mac" {
  display_name = var.mac_profile_name != null ? var.mac_profile_name : "default-mac-discovery-profile"
}